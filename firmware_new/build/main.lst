ARM GAS  /var/folders/gg/1prykzgd72385vwcgrq9wzdr0000gn/T//ccGmacnV.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"main.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text._Error_Handler,"ax",%progbits
  21              		.align	2
  22              		.global	_Error_Handler
  23              		.thumb
  24              		.thumb_func
  26              	_Error_Handler:
  27              	.LFB125:
  28              		.file 1 "Src/main.c"
   1:Src/main.c    **** /**
   2:Src/main.c    ****   ******************************************************************************
   3:Src/main.c    ****   * File Name          : main.c
   4:Src/main.c    ****   * Description        : Main program body
   5:Src/main.c    ****   ******************************************************************************
   6:Src/main.c    ****   ** This notice applies to any and all portions of this file
   7:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   8:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
   9:Src/main.c    ****   * inserted by the user or by software development tools
  10:Src/main.c    ****   * are owned by their respective copyright owners.
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * COPYRIGHT(c) 2018 STMicroelectronics
  13:Src/main.c    ****   *
  14:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  15:Src/main.c    ****   * are permitted provided that the following conditions are met:
  16:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  17:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  18:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  19:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  20:Src/main.c    ****   *      and/or other materials provided with the distribution.
  21:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  22:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  23:Src/main.c    ****   *      without specific prior written permission.
  24:Src/main.c    ****   *
  25:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  26:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  27:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  28:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  29:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  30:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
ARM GAS  /var/folders/gg/1prykzgd72385vwcgrq9wzdr0000gn/T//ccGmacnV.s 			page 2


  31:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  32:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  33:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  34:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:Src/main.c    ****   *
  36:Src/main.c    ****   ******************************************************************************
  37:Src/main.c    ****   */
  38:Src/main.c    **** 
  39:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  40:Src/main.c    **** #include "main.h"
  41:Src/main.c    **** #include "stm32f4xx_hal.h"
  42:Src/main.c    **** #include "dma.h"
  43:Src/main.c    **** #include "i2c.h"
  44:Src/main.c    **** #include "tim.h"
  45:Src/main.c    **** #include "usart.h"
  46:Src/main.c    **** #include "gpio.h"
  47:Src/main.c    **** 
  48:Src/main.c    **** /* USER CODE BEGIN Includes */
  49:Src/main.c    **** 
  50:Src/main.c    **** /* USER CODE END Includes */
  51:Src/main.c    **** 
  52:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  53:Src/main.c    **** 
  54:Src/main.c    **** /* USER CODE BEGIN PV */
  55:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  56:Src/main.c    **** 
  57:Src/main.c    **** /* USER CODE END PV */
  58:Src/main.c    **** 
  59:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  60:Src/main.c    **** void SystemClock_Config(void);
  61:Src/main.c    **** 
  62:Src/main.c    **** /* USER CODE BEGIN PFP */
  63:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  64:Src/main.c    **** 
  65:Src/main.c    **** /* USER CODE END PFP */
  66:Src/main.c    **** 
  67:Src/main.c    **** /* USER CODE BEGIN 0 */
  68:Src/main.c    **** 
  69:Src/main.c    **** /* USER CODE END 0 */
  70:Src/main.c    **** 
  71:Src/main.c    **** int main(void)
  72:Src/main.c    **** {
  73:Src/main.c    **** 
  74:Src/main.c    ****   /* USER CODE BEGIN 1 */
  75:Src/main.c    **** 
  76:Src/main.c    ****     // Initialize all clocks so we don't run into weird clock problems...
  77:Src/main.c    ****     RCC->AHB1ENR |= 0xFFFFFFFF;
  78:Src/main.c    ****     RCC->AHB2ENR |= 0xFFFFFFFF;
  79:Src/main.c    ****     RCC->AHB3ENR |= 0xFFFFFFFF;
  80:Src/main.c    ****     RCC->APB1ENR |= 0xFFFFFFFF;
  81:Src/main.c    ****     RCC->APB2ENR |= 0xFFFFFFFF;
  82:Src/main.c    **** 
  83:Src/main.c    ****   /* USER CODE END 1 */
  84:Src/main.c    **** 
  85:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
  86:Src/main.c    **** 
  87:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
ARM GAS  /var/folders/gg/1prykzgd72385vwcgrq9wzdr0000gn/T//ccGmacnV.s 			page 3


  88:Src/main.c    ****   HAL_Init();
  89:Src/main.c    **** 
  90:Src/main.c    ****   /* USER CODE BEGIN Init */
  91:Src/main.c    **** 
  92:Src/main.c    ****   /* USER CODE END Init */
  93:Src/main.c    **** 
  94:Src/main.c    ****   /* Configure the system clock */
  95:Src/main.c    ****   SystemClock_Config();
  96:Src/main.c    **** 
  97:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  98:Src/main.c    **** 
  99:Src/main.c    ****   /* USER CODE END SysInit */
 100:Src/main.c    **** 
 101:Src/main.c    ****   /* Initialize all configured peripherals */
 102:Src/main.c    ****   MX_GPIO_Init();
 103:Src/main.c    ****   MX_DMA_Init();
 104:Src/main.c    ****   MX_I2C2_Init();
 105:Src/main.c    ****   MX_I2C3_Init();
 106:Src/main.c    ****   MX_TIM3_Init();
 107:Src/main.c    ****   MX_TIM4_Init();
 108:Src/main.c    ****   MX_TIM12_Init();
 109:Src/main.c    ****   MX_USART2_UART_Init();
 110:Src/main.c    **** 
 111:Src/main.c    ****   /* USER CODE BEGIN 2 */
 112:Src/main.c    **** 
 113:Src/main.c    ****   /* USER CODE END 2 */
 114:Src/main.c    **** 
 115:Src/main.c    ****   /* Infinite loop */
 116:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 117:Src/main.c    ****   while (1)
 118:Src/main.c    ****   {
 119:Src/main.c    ****   /* USER CODE END WHILE */
 120:Src/main.c    **** 
 121:Src/main.c    ****   /* USER CODE BEGIN 3 */
 122:Src/main.c    ****         HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_10);
 123:Src/main.c    ****         HAL_Delay(500);
 124:Src/main.c    ****   }
 125:Src/main.c    ****   /* USER CODE END 3 */
 126:Src/main.c    **** 
 127:Src/main.c    **** }
 128:Src/main.c    **** 
 129:Src/main.c    **** /** System Clock Configuration
 130:Src/main.c    **** */
 131:Src/main.c    **** void SystemClock_Config(void)
 132:Src/main.c    **** {
 133:Src/main.c    **** 
 134:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 135:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 136:Src/main.c    **** 
 137:Src/main.c    ****     /**Configure the main internal regulator output voltage 
 138:Src/main.c    ****     */
 139:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 140:Src/main.c    **** 
 141:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 142:Src/main.c    **** 
 143:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 144:Src/main.c    ****     */
ARM GAS  /var/folders/gg/1prykzgd72385vwcgrq9wzdr0000gn/T//ccGmacnV.s 			page 4


 145:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 146:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 147:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 148:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 149:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 150:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 360;
 151:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 152:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 153:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLR = 2;
 154:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 155:Src/main.c    ****   {
 156:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 157:Src/main.c    ****   }
 158:Src/main.c    **** 
 159:Src/main.c    ****     /**Activate the Over-Drive mode 
 160:Src/main.c    ****     */
 161:Src/main.c    ****   if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 162:Src/main.c    ****   {
 163:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 164:Src/main.c    ****   }
 165:Src/main.c    **** 
 166:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 167:Src/main.c    ****     */
 168:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 169:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 170:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 171:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 172:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 173:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 174:Src/main.c    **** 
 175:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 176:Src/main.c    ****   {
 177:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 178:Src/main.c    ****   }
 179:Src/main.c    **** 
 180:Src/main.c    ****     /**Configure the Systick interrupt time 
 181:Src/main.c    ****     */
 182:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 183:Src/main.c    **** 
 184:Src/main.c    ****     /**Configure the Systick 
 185:Src/main.c    ****     */
 186:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 187:Src/main.c    **** 
 188:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 189:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 190:Src/main.c    **** }
 191:Src/main.c    **** 
 192:Src/main.c    **** /* USER CODE BEGIN 4 */
 193:Src/main.c    **** 
 194:Src/main.c    **** /* USER CODE END 4 */
 195:Src/main.c    **** 
 196:Src/main.c    **** /**
 197:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 198:Src/main.c    ****   * @param  None
 199:Src/main.c    ****   * @retval None
 200:Src/main.c    ****   */
 201:Src/main.c    **** void _Error_Handler(char * file, int line)
ARM GAS  /var/folders/gg/1prykzgd72385vwcgrq9wzdr0000gn/T//ccGmacnV.s 			page 5


 202:Src/main.c    **** {
  29              		.loc 1 202 0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              	.LVL0:
  35 0000 08B5     		push	{r3, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 3, -8
  39              		.cfi_offset 14, -4
 203:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 204:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 205:Src/main.c    ****     while(1) 
 206:Src/main.c    ****     {
 207:Src/main.c    ****         printf("Entered error handler.\r\n");
  40              		.loc 1 207 0
  41 0002 0648     		ldr	r0, .L4
  42              	.LVL1:
  43 0004 FFF7FEFF 		bl	puts
  44              	.LVL2:
  45              	.L2:
 208:Src/main.c    ****         while(1) 
 209:Src/main.c    ****         {
 210:Src/main.c    ****             HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_1);
  46              		.loc 1 210 0 discriminator 1
  47 0008 0548     		ldr	r0, .L4+4
  48 000a 0221     		movs	r1, #2
  49 000c FFF7FEFF 		bl	HAL_GPIO_TogglePin
  50              	.LVL3:
 211:Src/main.c    ****             HAL_Delay(500);
  51              		.loc 1 211 0 discriminator 1
  52 0010 4FF4FA70 		mov	r0, #500
  53 0014 FFF7FEFF 		bl	HAL_Delay
  54              	.LVL4:
 212:Src/main.c    ****         }
  55              		.loc 1 212 0 discriminator 1
  56 0018 F6E7     		b	.L2
  57              	.L5:
  58 001a 00BF     		.align	2
  59              	.L4:
  60 001c 00000000 		.word	.LC0
  61 0020 00040240 		.word	1073873920
  62              		.cfi_endproc
  63              	.LFE125:
  65              		.section	.text.SystemClock_Config,"ax",%progbits
  66              		.align	2
  67              		.global	SystemClock_Config
  68              		.thumb
  69              		.thumb_func
  71              	SystemClock_Config:
  72              	.LFB124:
 132:Src/main.c    **** 
  73              		.loc 1 132 0
  74              		.cfi_startproc
  75              		@ args = 0, pretend = 0, frame = 80
ARM GAS  /var/folders/gg/1prykzgd72385vwcgrq9wzdr0000gn/T//ccGmacnV.s 			page 6


  76              		@ frame_needed = 0, uses_anonymous_args = 0
  77 0000 00B5     		push	{lr}
  78              	.LCFI1:
  79              		.cfi_def_cfa_offset 4
  80              		.cfi_offset 14, -4
  81 0002 95B0     		sub	sp, sp, #84
  82              	.LCFI2:
  83              		.cfi_def_cfa_offset 88
  84              	.LBB2:
 139:Src/main.c    **** 
  85              		.loc 1 139 0
  86 0004 0021     		movs	r1, #0
  87 0006 0091     		str	r1, [sp]
  88 0008 2F4B     		ldr	r3, .L11
  89 000a 1A6C     		ldr	r2, [r3, #64]
  90 000c 42F08052 		orr	r2, r2, #268435456
  91 0010 1A64     		str	r2, [r3, #64]
  92 0012 1B6C     		ldr	r3, [r3, #64]
  93 0014 03F08053 		and	r3, r3, #268435456
  94 0018 0093     		str	r3, [sp]
  95 001a 009B     		ldr	r3, [sp]
  96              	.LBE2:
  97              	.LBB3:
 141:Src/main.c    **** 
  98              		.loc 1 141 0
  99 001c 0191     		str	r1, [sp, #4]
 100 001e 2B4B     		ldr	r3, .L11+4
 101 0020 1A68     		ldr	r2, [r3]
 102 0022 42F44042 		orr	r2, r2, #49152
 103 0026 1A60     		str	r2, [r3]
 104 0028 1B68     		ldr	r3, [r3]
 105 002a 03F44043 		and	r3, r3, #49152
 106 002e 0193     		str	r3, [sp, #4]
 107 0030 019B     		ldr	r3, [sp, #4]
 108              	.LBE3:
 145:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 109              		.loc 1 145 0
 110 0032 0123     		movs	r3, #1
 111 0034 0793     		str	r3, [sp, #28]
 146:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 112              		.loc 1 146 0
 113 0036 4FF48033 		mov	r3, #65536
 114 003a 0893     		str	r3, [sp, #32]
 147:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 115              		.loc 1 147 0
 116 003c 0223     		movs	r3, #2
 117 003e 0D93     		str	r3, [sp, #52]
 148:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 118              		.loc 1 148 0
 119 0040 4FF48002 		mov	r2, #4194304
 120 0044 0E92     		str	r2, [sp, #56]
 149:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 360;
 121              		.loc 1 149 0
 122 0046 0822     		movs	r2, #8
 123 0048 0F92     		str	r2, [sp, #60]
 150:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 124              		.loc 1 150 0
ARM GAS  /var/folders/gg/1prykzgd72385vwcgrq9wzdr0000gn/T//ccGmacnV.s 			page 7


 125 004a 4FF4B472 		mov	r2, #360
 126 004e 1092     		str	r2, [sp, #64]
 151:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 127              		.loc 1 151 0
 128 0050 1193     		str	r3, [sp, #68]
 152:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLR = 2;
 129              		.loc 1 152 0
 130 0052 1293     		str	r3, [sp, #72]
 153:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 131              		.loc 1 153 0
 132 0054 1393     		str	r3, [sp, #76]
 154:Src/main.c    ****   {
 133              		.loc 1 154 0
 134 0056 07A8     		add	r0, sp, #28
 135 0058 FFF7FEFF 		bl	HAL_RCC_OscConfig
 136              	.LVL5:
 137 005c 18B1     		cbz	r0, .L7
 156:Src/main.c    ****   }
 138              		.loc 1 156 0
 139 005e 1C48     		ldr	r0, .L11+8
 140 0060 9C21     		movs	r1, #156
 141 0062 FFF7FEFF 		bl	_Error_Handler
 142              	.LVL6:
 143              	.L7:
 161:Src/main.c    ****   {
 144              		.loc 1 161 0
 145 0066 FFF7FEFF 		bl	HAL_PWREx_EnableOverDrive
 146              	.LVL7:
 147 006a 18B1     		cbz	r0, .L8
 163:Src/main.c    ****   }
 148              		.loc 1 163 0
 149 006c 1848     		ldr	r0, .L11+8
 150 006e A321     		movs	r1, #163
 151 0070 FFF7FEFF 		bl	_Error_Handler
 152              	.LVL8:
 153              	.L8:
 168:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 154              		.loc 1 168 0
 155 0074 0F23     		movs	r3, #15
 156 0076 0293     		str	r3, [sp, #8]
 170:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 157              		.loc 1 170 0
 158 0078 0223     		movs	r3, #2
 159 007a 0393     		str	r3, [sp, #12]
 171:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 160              		.loc 1 171 0
 161 007c 0023     		movs	r3, #0
 162 007e 0493     		str	r3, [sp, #16]
 172:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 163              		.loc 1 172 0
 164 0080 4FF4A053 		mov	r3, #5120
 165 0084 0593     		str	r3, [sp, #20]
 173:Src/main.c    **** 
 166              		.loc 1 173 0
 167 0086 4FF48053 		mov	r3, #4096
 168 008a 0693     		str	r3, [sp, #24]
 175:Src/main.c    ****   {
ARM GAS  /var/folders/gg/1prykzgd72385vwcgrq9wzdr0000gn/T//ccGmacnV.s 			page 8


 169              		.loc 1 175 0
 170 008c 02A8     		add	r0, sp, #8
 171 008e 0521     		movs	r1, #5
 172 0090 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 173              	.LVL9:
 174 0094 18B1     		cbz	r0, .L9
 177:Src/main.c    ****   }
 175              		.loc 1 177 0
 176 0096 0E48     		ldr	r0, .L11+8
 177 0098 B121     		movs	r1, #177
 178 009a FFF7FEFF 		bl	_Error_Handler
 179              	.LVL10:
 180              	.L9:
 182:Src/main.c    **** 
 181              		.loc 1 182 0
 182 009e FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 183              	.LVL11:
 184 00a2 0C4B     		ldr	r3, .L11+12
 185 00a4 A3FB0030 		umull	r3, r0, r3, r0
 186 00a8 8009     		lsrs	r0, r0, #6
 187 00aa FFF7FEFF 		bl	HAL_SYSTICK_Config
 188              	.LVL12:
 186:Src/main.c    **** 
 189              		.loc 1 186 0
 190 00ae 0420     		movs	r0, #4
 191 00b0 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 192              	.LVL13:
 189:Src/main.c    **** }
 193              		.loc 1 189 0
 194 00b4 4FF0FF30 		mov	r0, #-1
 195 00b8 0021     		movs	r1, #0
 196 00ba 0A46     		mov	r2, r1
 197 00bc FFF7FEFF 		bl	HAL_NVIC_SetPriority
 198              	.LVL14:
 190:Src/main.c    **** 
 199              		.loc 1 190 0
 200 00c0 15B0     		add	sp, sp, #84
 201              	.LCFI3:
 202              		.cfi_def_cfa_offset 4
 203              		@ sp needed
 204 00c2 5DF804FB 		ldr	pc, [sp], #4
 205              	.L12:
 206 00c6 00BF     		.align	2
 207              	.L11:
 208 00c8 00380240 		.word	1073887232
 209 00cc 00700040 		.word	1073770496
 210 00d0 18000000 		.word	.LC1
 211 00d4 D34D6210 		.word	274877907
 212              		.cfi_endproc
 213              	.LFE124:
 215              		.section	.text.main,"ax",%progbits
 216              		.align	2
 217              		.global	main
 218              		.thumb
 219              		.thumb_func
 221              	main:
 222              	.LFB123:
ARM GAS  /var/folders/gg/1prykzgd72385vwcgrq9wzdr0000gn/T//ccGmacnV.s 			page 9


  72:Src/main.c    **** 
 223              		.loc 1 72 0
 224              		.cfi_startproc
 225              		@ Volatile: function does not return.
 226              		@ args = 0, pretend = 0, frame = 0
 227              		@ frame_needed = 0, uses_anonymous_args = 0
 228 0000 08B5     		push	{r3, lr}
 229              	.LCFI4:
 230              		.cfi_def_cfa_offset 8
 231              		.cfi_offset 3, -8
 232              		.cfi_offset 14, -4
  77:Src/main.c    ****     RCC->AHB2ENR |= 0xFFFFFFFF;
 233              		.loc 1 77 0
 234 0002 154B     		ldr	r3, .L16
 235 0004 1A6B     		ldr	r2, [r3, #48]
 236 0006 4FF0FF32 		mov	r2, #-1
 237 000a 1A63     		str	r2, [r3, #48]
  78:Src/main.c    ****     RCC->AHB3ENR |= 0xFFFFFFFF;
 238              		.loc 1 78 0
 239 000c 596B     		ldr	r1, [r3, #52]
 240 000e 5A63     		str	r2, [r3, #52]
  79:Src/main.c    ****     RCC->APB1ENR |= 0xFFFFFFFF;
 241              		.loc 1 79 0
 242 0010 996B     		ldr	r1, [r3, #56]
 243 0012 9A63     		str	r2, [r3, #56]
  80:Src/main.c    ****     RCC->APB2ENR |= 0xFFFFFFFF;
 244              		.loc 1 80 0
 245 0014 196C     		ldr	r1, [r3, #64]
 246 0016 1A64     		str	r2, [r3, #64]
  81:Src/main.c    **** 
 247              		.loc 1 81 0
 248 0018 596C     		ldr	r1, [r3, #68]
 249 001a 5A64     		str	r2, [r3, #68]
  88:Src/main.c    **** 
 250              		.loc 1 88 0
 251 001c FFF7FEFF 		bl	HAL_Init
 252              	.LVL15:
  95:Src/main.c    **** 
 253              		.loc 1 95 0
 254 0020 FFF7FEFF 		bl	SystemClock_Config
 255              	.LVL16:
 102:Src/main.c    ****   MX_DMA_Init();
 256              		.loc 1 102 0
 257 0024 FFF7FEFF 		bl	MX_GPIO_Init
 258              	.LVL17:
 103:Src/main.c    ****   MX_I2C2_Init();
 259              		.loc 1 103 0
 260 0028 FFF7FEFF 		bl	MX_DMA_Init
 261              	.LVL18:
 104:Src/main.c    ****   MX_I2C3_Init();
 262              		.loc 1 104 0
 263 002c FFF7FEFF 		bl	MX_I2C2_Init
 264              	.LVL19:
 105:Src/main.c    ****   MX_TIM3_Init();
 265              		.loc 1 105 0
 266 0030 FFF7FEFF 		bl	MX_I2C3_Init
 267              	.LVL20:
ARM GAS  /var/folders/gg/1prykzgd72385vwcgrq9wzdr0000gn/T//ccGmacnV.s 			page 10


 106:Src/main.c    ****   MX_TIM4_Init();
 268              		.loc 1 106 0
 269 0034 FFF7FEFF 		bl	MX_TIM3_Init
 270              	.LVL21:
 107:Src/main.c    ****   MX_TIM12_Init();
 271              		.loc 1 107 0
 272 0038 FFF7FEFF 		bl	MX_TIM4_Init
 273              	.LVL22:
 108:Src/main.c    ****   MX_USART2_UART_Init();
 274              		.loc 1 108 0
 275 003c FFF7FEFF 		bl	MX_TIM12_Init
 276              	.LVL23:
 109:Src/main.c    **** 
 277              		.loc 1 109 0
 278 0040 FFF7FEFF 		bl	MX_USART2_UART_Init
 279              	.LVL24:
 280              	.L14:
 122:Src/main.c    ****         HAL_Delay(500);
 281              		.loc 1 122 0 discriminator 1
 282 0044 0548     		ldr	r0, .L16+4
 283 0046 4FF48061 		mov	r1, #1024
 284 004a FFF7FEFF 		bl	HAL_GPIO_TogglePin
 285              	.LVL25:
 123:Src/main.c    ****   }
 286              		.loc 1 123 0 discriminator 1
 287 004e 4FF4FA70 		mov	r0, #500
 288 0052 FFF7FEFF 		bl	HAL_Delay
 289              	.LVL26:
 124:Src/main.c    ****   /* USER CODE END 3 */
 290              		.loc 1 124 0 discriminator 1
 291 0056 F5E7     		b	.L14
 292              	.L17:
 293              		.align	2
 294              	.L16:
 295 0058 00380240 		.word	1073887232
 296 005c 00080240 		.word	1073874944
 297              		.cfi_endproc
 298              	.LFE123:
 300              		.section	.text.assert_failed,"ax",%progbits
 301              		.align	2
 302              		.global	assert_failed
 303              		.thumb
 304              		.thumb_func
 306              	assert_failed:
 307              	.LFB126:
 213:Src/main.c    ****     }
 214:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */ 
 215:Src/main.c    **** }
 216:Src/main.c    **** 
 217:Src/main.c    **** #ifdef USE_FULL_ASSERT
 218:Src/main.c    **** 
 219:Src/main.c    **** /**
 220:Src/main.c    ****    * @brief Reports the name of the source file and the source line number
 221:Src/main.c    ****    * where the assert_param error has occurred.
 222:Src/main.c    ****    * @param file: pointer to the source file name
 223:Src/main.c    ****    * @param line: assert_param error line source number
 224:Src/main.c    ****    * @retval None
ARM GAS  /var/folders/gg/1prykzgd72385vwcgrq9wzdr0000gn/T//ccGmacnV.s 			page 11


 225:Src/main.c    ****    */
 226:Src/main.c    **** void assert_failed(uint8_t* file, uint32_t line)
 227:Src/main.c    **** {
 308              		.loc 1 227 0
 309              		.cfi_startproc
 310              		@ args = 0, pretend = 0, frame = 0
 311              		@ frame_needed = 0, uses_anonymous_args = 0
 312              		@ link register save eliminated.
 313              	.LVL27:
 314 0000 7047     		bx	lr
 315              		.cfi_endproc
 316              	.LFE126:
 318 0002 00BF     		.section	.rodata.str1.4,"aMS",%progbits,1
 319              		.align	2
 320              	.LC0:
 321 0000 456E7465 		.ascii	"Entered error handler.\015\000"
 321      72656420 
 321      6572726F 
 321      72206861 
 321      6E646C65 
 322              	.LC1:
 323 0018 5372632F 		.ascii	"Src/main.c\000"
 323      6D61696E 
 323      2E6300
 324 0023 00       		.text
 325              	.Letext0:
 326              		.file 2 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 327              		.file 3 "/Users/justinng/Documents/Github/roborodentia2017/arm/arm-none-eabi/include/machine/_defa
 328              		.file 4 "/Users/justinng/Documents/Github/roborodentia2017/arm/arm-none-eabi/include/stdint.h"
 329              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 330              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 331              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 332              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 333              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 334              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_pwr_ex.h"
 335              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 336              		.file 12 "Inc/gpio.h"
 337              		.file 13 "Inc/dma.h"
 338              		.file 14 "Inc/i2c.h"
 339              		.file 15 "Inc/tim.h"
 340              		.file 16 "Inc/usart.h"
 341              		.file 17 "Drivers/CMSIS/Include/core_cm4.h"
 342              		.file 18 "<built-in>"
ARM GAS  /var/folders/gg/1prykzgd72385vwcgrq9wzdr0000gn/T//ccGmacnV.s 			page 12


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/gg/1prykzgd72385vwcgrq9wzdr0000gn/T//ccGmacnV.s:21     .text._Error_Handler:0000000000000000 $t
/var/folders/gg/1prykzgd72385vwcgrq9wzdr0000gn/T//ccGmacnV.s:26     .text._Error_Handler:0000000000000000 _Error_Handler
/var/folders/gg/1prykzgd72385vwcgrq9wzdr0000gn/T//ccGmacnV.s:60     .text._Error_Handler:000000000000001c $d
/var/folders/gg/1prykzgd72385vwcgrq9wzdr0000gn/T//ccGmacnV.s:66     .text.SystemClock_Config:0000000000000000 $t
/var/folders/gg/1prykzgd72385vwcgrq9wzdr0000gn/T//ccGmacnV.s:71     .text.SystemClock_Config:0000000000000000 SystemClock_Config
/var/folders/gg/1prykzgd72385vwcgrq9wzdr0000gn/T//ccGmacnV.s:208    .text.SystemClock_Config:00000000000000c8 $d
/var/folders/gg/1prykzgd72385vwcgrq9wzdr0000gn/T//ccGmacnV.s:216    .text.main:0000000000000000 $t
/var/folders/gg/1prykzgd72385vwcgrq9wzdr0000gn/T//ccGmacnV.s:221    .text.main:0000000000000000 main
/var/folders/gg/1prykzgd72385vwcgrq9wzdr0000gn/T//ccGmacnV.s:295    .text.main:0000000000000058 $d
/var/folders/gg/1prykzgd72385vwcgrq9wzdr0000gn/T//ccGmacnV.s:301    .text.assert_failed:0000000000000000 $t
/var/folders/gg/1prykzgd72385vwcgrq9wzdr0000gn/T//ccGmacnV.s:306    .text.assert_failed:0000000000000000 assert_failed
/var/folders/gg/1prykzgd72385vwcgrq9wzdr0000gn/T//ccGmacnV.s:319    .rodata.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
puts
HAL_GPIO_TogglePin
HAL_Delay
HAL_RCC_OscConfig
HAL_PWREx_EnableOverDrive
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
MX_GPIO_Init
MX_DMA_Init
MX_I2C2_Init
MX_I2C3_Init
MX_TIM3_Init
MX_TIM4_Init
MX_TIM12_Init
MX_USART2_UART_Init
